list_todos:
  inputs:
    - comment
    - todo_keywords
  outputs:
    - issue_number_list
  steps:
    - action: find_todos
      inputs:
        comment:
          var: comment
        todo_keywords:
          var: todo_keywords
      outputs:
        todos: todos # dict[str, List[TodoLocation]]
    - iterate: todos
      as: todo
      workflow: build_and_publish_todo
      inputs:
        todo:
          var: todo
      list_outputs:
        issue_number: issue_number_list

build_and_publish_todo:
  inputs:
    - todo
  outputs:
    - issue_number
  steps:
    - action: choice
      inputs:
        choices:
          param:
            default:
              - "easy"
              - "medium"
              - "hard"
            name: TASK_DIFFICULTY_CHOICES
        prompt_context: 
          - var: todo.task
            heading: "Task"
        prompt:
          param:
            default: "How hard is this task?"
            name: TASK_DIFFICULTY_PROMPT
      outputs:
        choice: task_difficulty
    
    - action: prompt
      inputs:
        prompt_context:
          - var: todo.task
            heading: "I have a TODO in my code."
        prompt:
          param:
            default: "What tips can you give to someone that's resolving this TODO?"
            name: TODO_RESOLVE_PROMPT
        instructions:
          param:
            default: "Respond in 1-3 sentences."
            name: TODO_RESOLVE_INSTRUCTIONS
      outputs:
        result: prompt_suggestions

    - set_vars:
        truncated_task:
          lambda: f"{todo.task[:50]} ..." if len(todo.task) > 50 else todo.task
        issue_title:
          template: |
            [AutoPR] {{ truncated_task }}
        issue_body:
          template: |
            ## {{ todo.task }}

            {% for todo_location in todo.locations %}
            {{ todo_location.url }}
            {% endfor %}

            ### Suggestions for resolving this TODO:
            
            {{ prompt_suggestions }}
        label_list:
          lambda: |
            [task_difficulty]
    
    - action: publish_issue
      inputs:
        issue_title:
          var: issue_title
        issue_body:
          var: issue_body
        update_if_exists:
          const: true
        issue_labels:
          var: label_list
      outputs:
        issue_number: issue_number

invoke_list_todos_workflow:
  outputs:
    - issue_number_list
  steps:
    - workflow: list_todos
      inputs:
        comment:
          const: "#"
        todo_keywords:
          const:
            - "TODO"
            - "FIXME"
      outputs:
        issue_number_list: issue_number_list