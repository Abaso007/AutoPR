list_todos:
  inputs:
    - comment
  outputs:
    - task_list
    - issue_body_list
  steps:
    - action: find_todos
      inputs: 
        comment: 
          var: comment
      outputs:
        todos: todos # dict[str, List[TodoLocation]]
    - iterate: todos
      as: todo
      workflow: build_and_publish_todo
      inputs:
        todo:
          var: todo
      list_outputs:
        task: task_list # list[str]
        issue_body: issue_body_list # list[str]

build_and_publish_todo:
  inputs:
    - todo
  outputs:
    - task
    - issue_body
  steps:

    - action: choice
      inputs:
        choices:
          const:
            - "easy"
            - "medium"
            - "hard"
        prompt_context: 
          - lambda: |
              todo.task
            heading: "Task"
        prompt:
          param:
            default: "How hard is this task?"
            name: TASK_DIFFICULTY_PROMPT
        instructions:
          param:
            default: "Choose one of the following: easy, medium, hard."
            name: TASK_DIFFICULTY_INSTRUCTIONS
      outputs:
        choice: task_difficulty

    - set_vars:
        task:
          lambda: todo.task
        truncated_task:
          lambda: f"{task[:50]} ..." if len(task) > 50 else task
        issue_title:
          template: |
            [AutoPR] {{ truncated_task }}
        issue_body:
          template: |
            ## {{ task }}

            {% for todo_location in todo.locations %}
            {{ todo_location.url }}
            {% endfor %}

            Estimated difficulty: {{ task_difficulty }}

