list_todos:
  outputs:
    - task_list
    - issue_body_list
  steps:
    - action: find_todos
      outputs:
        todos: todos # dict[str, List[TodoLocation]]
    - iterate: todos
      as: todo
      workflow: build_and_publish_todo
      inputs:
        todo:
          var: todo
      list_outputs:
        task: task_list
        issue_body: issue_body_list
        issue_number: issue_number_list

build_and_publish_todo:
  inputs:
    - todo
  outputs:
    - task
    - issue_body
    - issue_number
  steps:
    - action: choice
      inputs:
        choices:
          param:
            default:
              - "easy"
              - "medium"
              - "hard"
            name: TASK_DIFFICULTY_CHOICES
        prompt_context: 
          - var: todo.task
            heading: "Task"
        prompt:
          param:
            default: "How hard is this task?"
            name: TASK_DIFFICULTY_PROMPT
      outputs:
        choice: task_difficulty

    - set_vars:
        task:
          var: todo.task
        truncated_task:
          lambda: f"{task[:50]} ..." if len(task) > 50 else task
        issue_title:
          template: |
            [AutoPR] {{ truncated_task }}
        issue_body:
          template: |
            ## {{ todo.task }}

            {% for todo_location in todo.locations %}
            {{ todo_location.url }}
            {% endfor %}

            Estimated difficulty: {{ task_difficulty }}
    
    - action: publish_issue
      inputs:
        issue_title:
          var: issue_title
        issue_body:
          var: issue_body
        update_if_exists:
          const: true
      outputs:
        issue_number: issue_number

